
;
; Created on Sun Mar 30 14:55:56 2025 with ECE 449 assembler v1.12 beta 1 (16 bit).
;
;Header Section
RADIX 10
DEPTH 2048
WIDTH 16
DEFAULT 0
;
; Data Section
; Specifies data to be stored in different addresses
; e.g., DATA 0:A, 1:0
;
RADIX 16
DATA 
1040 => "0010010110011000", -- 0410 - 2598                loadimm.upper 0x98
1042 => "0010010000101010", -- 0412 - 242A                loadimm.lower 0x2a
1044 => "0010011011111000", -- 0414 - 26F8                mov           r3,r7
1046 => "0010010100000000", -- 0416 - 2500                loadimm.upper 0x00
1048 => "0010010000000001", -- 0418 - 2401                loadimm.lower 0x01
1050 => "0010011001111000", -- 041A - 2678                mov           r1,r7
1052 => "0010010100000000", -- 041C - 2500                loadimm.upper 0x00
1054 => "0010010000000000", -- 041E - 2400                loadimm.lower 0x00
1056 => "0010011000111000", -- 0420 - 2638                mov           r0,r7
1058 => "0010010100000101", -- 0422 - 2505                loadimm.upper x_pos.hi
1060 => "0010010010010110", -- 0424 - 2496                loadimm.lower x_pos.lo
1062 => "0010001111000000", -- 0426 - 23C0                store         r7,r0
1064 => "0010010100000101", -- 0428 - 2505                loadimm.upper y_pos.hi
1066 => "0010010010011000", -- 042A - 2498                loadimm.lower y_pos.lo
1068 => "0010001111000000", -- 042C - 23C0                store         r7,r0
1070 => "0010010100000000", -- 042E - 2500                loadimm.upper 0x00
1072 => "0010010000010100", -- 0430 - 2414                loadimm.lower 0x14
1074 => "0010011000111000", -- 0432 - 2638                mov           r0,r7
1076 => "0010010100000101", -- 0434 - 2505                loadimm.upper x_inc_limit.hi
1078 => "0010010010011010", -- 0436 - 249A                loadimm.lower x_inc_limit.lo
1080 => "0010001111000000", -- 0438 - 23C0                store         r7,r0
1082 => "0010010100000000", -- 043A - 2500                loadimm.upper 0x00
1084 => "0010010000001111", -- 043C - 240F                loadimm.lower 0x0f
1086 => "0010011000111000", -- 043E - 2638                mov           r0,r7
1088 => "0010010100000101", -- 0440 - 2505                loadimm.upper y_inc_limit.hi
1090 => "0010010010011100", -- 0442 - 249C                loadimm.lower y_inc_limit.lo
1092 => "0010001111000000", -- 0444 - 23C0                store         r7,r0
1094 => "0010010111111111", -- 0446 - 25FF                loadimm.upper 0xff
1096 => "0010010011111111", -- 0448 - 24FF                loadimm.lower 0xff
1098 => "0010011000111000", -- 044A - 2638                mov           r0,r7
1100 => "0010010100000101", -- 044C - 2505                loadimm.upper x_dec_limit.hi
1102 => "0010010010011110", -- 044E - 249E                loadimm.lower x_dec_limit.lo
1104 => "0010001111000000", -- 0450 - 23C0                store         r7,r0
1106 => "0010010100000000", -- 0452 - 2500                loadimm.upper 0x00
1108 => "0010010000000000", -- 0454 - 2400                loadimm.lower 0x00
1110 => "0010011000111000", -- 0456 - 2638                mov           r0,r7
1112 => "0010010100000101", -- 0458 - 2505                loadimm.upper y_dec_limit.hi
1114 => "0010010010100000", -- 045A - 24A0                loadimm.lower y_dec_limit.lo
1116 => "0010001111000000", -- 045C - 23C0                store         r7,r0
1118 => "0010010100000101", -- 045E - 2505 loop_1:        loadimm.upper x_pos.hi
1120 => "0010010010010110", -- 0460 - 2496                loadimm.lower x_pos.lo
1122 => "0010000000111000", -- 0462 - 2038                load          r0,r7
1124 => "0010010100000101", -- 0464 - 2505                loadimm.upper y_pos.hi
1126 => "0010010010011000", -- 0466 - 2498                loadimm.lower y_pos.lo
1128 => "0010000110111000", -- 0468 - 21B8                load          r6,r7
1130 => "0010010100000000", -- 046A - 2500                loadimm.upper 0x00
1132 => "0010010000010100", -- 046C - 2414                loadimm.lower 0x14
1134 => "0000011111110111", -- 046E - 07F7                mul           r7,r6,r7
1136 => "0000001000000111", -- 0470 - 0207                add           r0,r0,r7
1138 => "0010010111111100", -- 0472 - 25FC                loadimm.upper Console.hi
1140 => "0010010000000000", -- 0474 - 2400                loadimm.lower Console.lo
1142 => "0000001111000111", -- 0476 - 03C7                add           r7,r0,r7
1144 => "0010001111011000", -- 0478 - 23D8                store         r7,r3
1146 => "0010011110001000", -- 047A - 2788                mov           r6,r1
1148 => "0000110110000001", -- 047C - 0D81                shr           r6,1
1150 => "0000111110000000", -- 047E - 0F80                test          r6
1152 => "1000010000011010", -- 0480 - 841A                brr.z         increment_x
1154 => "0000110110000001", -- 0482 - 0D81                shr           r6,1
1156 => "0000111110000000", -- 0484 - 0F80                test          r6
1158 => "1000010000101010", -- 0486 - 842A                brr.z         increment_y
1160 => "0000110110000001", -- 0488 - 0D81                shr           r6,1
1162 => "0000111110000000", -- 048A - 0F80                test          r6
1164 => "1000010000111010", -- 048C - 843A                brr.z         decrement_x
1166 => "0010010100000101", -- 048E - 2505 decrement_y:   loadimm.upper y_pos.hi
1168 => "0010010010011000", -- 0490 - 2498                loadimm.lower y_pos.lo
1170 => "0010011100111000", -- 0492 - 2738                mov           r4,r7
1172 => "0010000110111000", -- 0494 - 21B8                load          r6,r7
1174 => "0010010100000000", -- 0496 - 2500                loadimm.upper 0x00
1176 => "0010010000000001", -- 0498 - 2401                loadimm.lower 0x01
1178 => "0000010110110111", -- 049A - 05B7                sub           r6,r6,r7
1180 => "0010010100000101", -- 049C - 2505                loadimm.upper y_dec_limit.hi
1182 => "0010010010100000", -- 049E - 24A0                loadimm.lower y_dec_limit.lo
1184 => "0010000111111000", -- 04A0 - 21F8                load          r7,r7
1186 => "0000010111110111", -- 04A2 - 05F7                sub           r7,r6,r7
1188 => "0000111111000000", -- 04A4 - 0FC0                test          r7
1190 => "1000010000000011", -- 04A6 - 8403                brr.z         dec_y1
1192 => "0010001100110000", -- 04A8 - 2330                store         r4,r6
1194 => "1000000111011010", -- 04AA - 81DA                brr           loop_1
1196 => "0010010000000001", -- 04AC - 2401 dec_y1:        loadimm.lower 0x01
1198 => "0010010100000000", -- 04AE - 2500                loadimm.upper 0x00
1200 => "0010011001111000", -- 04B0 - 2678                mov           r1,r7
1202 => "1000000000111010", -- 04B2 - 803A                brr           update_limits
1204 => "0010010100000101", -- 04B4 - 2505 increment_x:   loadimm.upper x_pos.hi
1206 => "0010010010010110", -- 04B6 - 2496                loadimm.lower x_pos.lo
1208 => "0010011100111000", -- 04B8 - 2738                mov           r4,r7
1210 => "0010000110111000", -- 04BA - 21B8                load          r6,r7
1212 => "0010010100000000", -- 04BC - 2500                loadimm.upper 0x00
1214 => "0010010000000001", -- 04BE - 2401                loadimm.lower 0x01
1216 => "0000001110110111", -- 04C0 - 03B7                add           r6,r6,r7
1218 => "0010010100000101", -- 04C2 - 2505                loadimm.upper x_inc_limit.hi
1220 => "0010010010011010", -- 04C4 - 249A                loadimm.lower x_inc_limit.lo
1222 => "0010000111111000", -- 04C6 - 21F8                load          r7,r7
1224 => "0000010111110111", -- 04C8 - 05F7                sub           r7,r6,r7
1226 => "0000111111000000", -- 04CA - 0FC0                test          r7
1228 => "1000010000000011", -- 04CC - 8403                brr.z         inc_x1
1230 => "0010001100110000", -- 04CE - 2330                store         r4,r6
1232 => "1000000111000111", -- 04D0 - 81C7                brr           loop_1
1234 => "0010010000000010", -- 04D2 - 2402 inc_x1:        loadimm.lower 0x02
1236 => "0010010100000000", -- 04D4 - 2500                loadimm.upper 0x00
1238 => "0010011001111000", -- 04D6 - 2678                mov           r1,r7
1240 => "1000000000111111", -- 04D8 - 803F                brr           check_end
1242 => "0010010100000101", -- 04DA - 2505 increment_y:   loadimm.upper y_pos.hi
1244 => "0010010010011000", -- 04DC - 2498                loadimm.lower y_pos.lo
1246 => "0010011100111000", -- 04DE - 2738                mov           r4,r7
1248 => "0010000110111000", -- 04E0 - 21B8                load          r6,r7
1250 => "0010010100000000", -- 04E2 - 2500                loadimm.upper 0x00
1252 => "0010010000000001", -- 04E4 - 2401                loadimm.lower 0x01
1254 => "0000001110110111", -- 04E6 - 03B7                add           r6,r6,r7
1256 => "0010010100000101", -- 04E8 - 2505                loadimm.upper y_inc_limit.hi
1258 => "0010010010011100", -- 04EA - 249C                loadimm.lower y_inc_limit.lo
1260 => "0010000111111000", -- 04EC - 21F8                load          r7,r7
1262 => "0000010111110111", -- 04EE - 05F7                sub           r7,r6,r7
1264 => "0000111111000000", -- 04F0 - 0FC0                test          r7
1266 => "1000010000000011", -- 04F2 - 8403                brr.z         inc_y1
1268 => "0010001100110000", -- 04F4 - 2330                store         r4,r6
1270 => "1000000110110100", -- 04F6 - 81B4                brr           loop_1
1272 => "0010010000000100", -- 04F8 - 2404 inc_y1:        loadimm.lower 0x04
1274 => "0010010100000000", -- 04FA - 2500                loadimm.upper 0x00
1276 => "0010011001111000", -- 04FC - 2678                mov           r1,r7
1278 => "1000000110110000", -- 04FE - 81B0                brr           loop_1
1280 => "0010010100000101", -- 0500 - 2505 decrement_x:   loadimm.upper x_pos.hi
1282 => "0010010010010110", -- 0502 - 2496                loadimm.lower x_pos.lo
1284 => "0010011100111000", -- 0504 - 2738                mov           r4,r7
1286 => "0010000110111000", -- 0506 - 21B8                load          r6,r7
1288 => "0010010100000000", -- 0508 - 2500                loadimm.upper 0x00
1290 => "0010010000000001", -- 050A - 2401                loadimm.lower 0x01
1292 => "0000010110110111", -- 050C - 05B7                sub           r6,r6,r7
1294 => "0010010100000101", -- 050E - 2505                loadimm.upper x_dec_limit.hi
1296 => "0010010010011110", -- 0510 - 249E                loadimm.lower x_dec_limit.lo
1298 => "0010000111111000", -- 0512 - 21F8                load          r7,r7
1300 => "0000010111110111", -- 0514 - 05F7                sub           r7,r6,r7
1302 => "0000111111000000", -- 0516 - 0FC0                test          r7
1304 => "1000010000000011", -- 0518 - 8403                brr.z         dec_x1
1306 => "0010001100110000", -- 051A - 2330                store         r4,r6
1308 => "1000000110100001", -- 051C - 81A1                brr           loop_1
1310 => "0010010000001000", -- 051E - 2408 dec_x1:        loadimm.lower 0x08
1312 => "0010010100000000", -- 0520 - 2500                loadimm.upper 0x00
1314 => "0010011001111000", -- 0522 - 2678                mov           r1,r7
1316 => "1000000110011101", -- 0524 - 819D                brr           loop_1
1318 => "0010010100000000", -- 0526 - 2500                loadimm.upper 0x00
1320 => "0010010000000001", -- 0528 - 2401                loadimm.lower 0x01
1322 => "0010011101111000", -- 052A - 2778                mov           r5,r7
1324 => "0010010100000101", -- 052C - 2505                loadimm.upper x_inc_limit.hi
1326 => "0010010010011010", -- 052E - 249A                loadimm.lower x_inc_limit.lo
1328 => "0010000110111000", -- 0530 - 21B8                load          r6,r7
1330 => "0000010110110101", -- 0532 - 05B5                sub           r6,r6,r5
1332 => "0010001111110000", -- 0534 - 23F0                store         r7,r6
1334 => "0010010100000101", -- 0536 - 2505                loadimm.upper y_inc_limit.hi
1336 => "0010010010011100", -- 0538 - 249C                loadimm.lower y_inc_limit.lo
1338 => "0010000110111000", -- 053A - 21B8                load          r6,r7
1340 => "0000010110110101", -- 053C - 05B5                sub           r6,r6,r5
1342 => "0010001111110000", -- 053E - 23F0                store         r7,r6
1344 => "0010010100000101", -- 0540 - 2505                loadimm.upper x_dec_limit.hi
1346 => "0010010010011110", -- 0542 - 249E                loadimm.lower x_dec_limit.lo
1348 => "0010000110111000", -- 0544 - 21B8                load          r6,r7
1350 => "0000001110110101", -- 0546 - 03B5                add           r6,r6,r5
1352 => "0010001111110000", -- 0548 - 23F0                store         r7,r6
1354 => "0010010100000101", -- 054A - 2505                loadimm.upper y_dec_limit.hi
1356 => "0010010010100000", -- 054C - 24A0                loadimm.lower y_dec_limit.lo
1358 => "0010000110111000", -- 054E - 21B8                load          r6,r7
1360 => "0000001110110101", -- 0550 - 03B5                add           r6,r6,r5
1362 => "0010001111110000", -- 0552 - 23F0                store         r7,r6
1364 => "1000000110000101", -- 0554 - 8185                brr           loop_1
1366 => "0010010100000000", -- 0556 - 2500 check_end:     loadimm.upper 0x00
1368 => "0010010000000111", -- 0558 - 2407                loadimm.lower 0x07
1370 => "0010011110111000", -- 055A - 27B8                mov           r6,r7
1372 => "0010010100000101", -- 055C - 2505                loadimm.upper y_pos.hi
1374 => "0010010010011000", -- 055E - 2498                loadimm.lower y_pos.lo
1376 => "0010000111111000", -- 0560 - 21F8                load          r7,r7
1378 => "0000010111111110", -- 0562 - 05FE                sub           r7,r7,r6
1380 => "0000111111000000", -- 0564 - 0FC0                test          r7
1382 => "1000010000000010", -- 0566 - 8402                brr.z         done_1
1384 => "1000000101111011", -- 0568 - 817B                brr           loop_1
1386 => "0010010100000000", -- 056A - 2500 done_1:        loadimm.upper 0x00
1388 => "0010010000001100", -- 056C - 240C                loadimm.lower 0x0c
1390 => "0010011110111000", -- 056E - 27B8                mov           r6,r7
1392 => "0010010100000101", -- 0570 - 2505                loadimm.upper x_pos.hi
1394 => "0010010010010110", -- 0572 - 2496                loadimm.lower x_pos.lo
1396 => "0010000111111000", -- 0574 - 21F8                load          r7,r7
1398 => "0000010111111110", -- 0576 - 05FE                sub           r7,r7,r6
1400 => "0000111111000000", -- 0578 - 0FC0                test          r7
1402 => "1000010000000010", -- 057A - 8402                brr.z         flip
1404 => "1000000101110001", -- 057C - 8171                brr           loop_1
1406 => "0010010000001010", -- 057E - 240A flip:          loadimm.lower 0x0A
1408 => "0010010100000000", -- 0580 - 2500                loadimm.upper 0x00
1410 => "0000100111011111", -- 0582 - 09DF                nand          r7,r3,r7
1412 => "0000100111111111", -- 0584 - 09FF                nand          r7,r7,r7
1414 => "0000111111000000", -- 0586 - 0FC0                test          r7
1416 => "1000010000000011", -- 0588 - 8403                brr.z         adv_y2
1418 => "0010010000100000", -- 058A - 2420                loadimm.lower 0x20
1420 => "1000000000000010", -- 058C - 8002                brr           adv_y3
1422 => "0010010000101010", -- 058E - 242A adv_y2:        loadimm.lower 0x2a
1424 => "0010010110011000", -- 0590 - 2598 adv_y3:        loadimm.upper 0x98
1426 => "0010011011111000", -- 0592 - 26F8                mov           r3,r7
1428 => "1000000101000001", -- 0594 - 8141                brr           restart_loop
1430 => "0000000000000000", -- 0596 - 0000 x_pos:         dw            0x0000
1432 => "0000000000000000", -- 0598 - 0000 y_pos:         dw            0x0000
1434 => "0000000000000000", -- 059A - 0000 x_inc_limit:   dw            0x0000
1436 => "0000000000000000", -- 059C - 0000 y_inc_limit:   dw            0x0000
1438 => "0000000000000000", -- 059E - 0000 x_dec_limit:   dw            0x0000
1440 => "0000000000000000", -- 05A0 - 0000 y_dec_limit:   dw            0x0000


-------------------------------------------------------
Symbol Table:
Console         64512 (FC00)
DipSwitches     65520 (FFF0)
LedDisplay      65522 (FFF2)
adv_y2           1422 (058E)
adv_y3           1424 (0590)
check_end        1366 (0556)
dec_x1           1310 (051E)
dec_y1           1196 (04AC)
decrement_x      1280 (0500)
decrement_y      1166 (048E)
done_1           1386 (056A)
flip             1406 (057E)
inc_x1           1234 (04D2)
inc_y1           1272 (04F8)
increment_x      1204 (04B4)
increment_y      1242 (04DA)
loop_1           1118 (045E)
restart_loop     1046 (0416)
update_limits    1318 (0526)
x_dec_limit      1438 (059E)
x_inc_limit      1434 (059A)
x_pos            1430 (0596)
y_dec_limit      1440 (05A0)
y_inc_limit      1436 (059C)
y_pos            1432 (0598)

